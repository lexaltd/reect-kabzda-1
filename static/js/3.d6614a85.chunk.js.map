{"version":3,"sources":["componets/Profile/ProfileInfo/ProfileInfo.module.css","componets/Profile/MyPosts/MyPosts.module.css","componets/Profile/MyPosts/Post/Post.module.css","componets/Profile/MyPosts/Post/Post.jsx","componets/Profile/MyPosts/MyPosts.jsx","componets/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","componets/Profile/ProfileInfo/ProfileInfo.jsx","componets/Profile/MyPosts/MyPostsContainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","reverse","map","el","id","createRef","postsBlock","values","addPost","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","imgLogo","descriptionBlock","photos","large","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.d6614a85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__382T7\",\"imgLogo\":\"ProfileInfo_imgLogo__imJS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1oDrF\",\"posts\":\"MyPosts_posts__W78pH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2955X\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    //console.log(props.message);\r\n    // debugger;\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg' />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>\r\n\t\t\t\t\t\t\t\t{props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n// import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n\t//handleSubmit - это callBack функция из redux-form\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field name=\"newPostText\" component={Textarea} placeholder={\"Введите ваше сообщение\"}\r\n\t\t\t\t\t\t\t validate={[required, maxLength10]} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\n// const MyPosts = (props) => {\r\nconst MyPosts = React.memo(props => {\r\n\t\t console.log(\"RENDER YO\");\r\n\r\n\t\t// let postsElements = props.posts.map(el => (<Post message={el.message} id={el.id} likesCount={el.likesCount}/>));\r\n\t\tlet postsElements =\r\n\t\t\t[...props.posts]\r\n\t\t\t\t.reverse()\r\n\t\t\t\t.map(el => (<Post message={el.message} id={el.id} likesCount={el.likesCount}/>));\r\n\r\n\t\tlet newPostElement = React.createRef();\r\n\r\n\t\t// let onPostChange = () => {\r\n\t\t// \tlet text = newPostElement.current.value;\r\n\t\t// \tprops.updateNewPostText(text);\r\n\t\t// };\r\n\r\n\t\tconst onAddPost = (values) => {\r\n\t\t\tprops.addPost(values.newPostText);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className={s.postsBlock}>\r\n\t\t\t\t<h3>My post</h3>\r\n\t\t\t\t{/*<div>*/}\r\n\t\t\t\t{/*<div>*/}\r\n\t\t\t\t{/*<textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>*/}\r\n\t\t\t\t{/*</div>*/}\r\n\t\t\t\t{/*<div>*/}\r\n\t\t\t\t{/*<button onClick={onAddPost}>Add post</button>*/}\r\n\t\t\t\t{/*</div>*/}\r\n\t\t\t\t{/*</div>*/}\r\n\t\t\t\t<AddNewPostFormRedux onSubmit={onAddPost}/>\r\n\t\t\t\t<div className={s.posts}>\r\n\t\t\t\t\t{postsElements}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n});\r\n\r\nexport default MyPosts;","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status);\r\n\t}, [props.status] );//Запусти useEffect если props.status изменится(похоже на componentDidUpdate)\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);//Записываю в базу\r\n\t};\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t<div>\r\n\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t<div>\r\n\t\t\t\t<input onChange={onStatusChange}\r\n\t\t\t\t\t\t\t autoFocus={true}\r\n\t\t\t\t\t\t\t onBlur={deactivateEditMode}\r\n\t\t\t\t\t\t\t value={status}/>\r\n\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n// import ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n// const ProfileInfo = (props) => {\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.imgLogo}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc='https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg'/>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\t<img src={profile.photos.large}/>\r\n\t\t\t\t{/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/}{/*//На классах*/}\r\n\t\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>{/*//На хуках*/}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n// import StoreContext from \"../../../StoreContext\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\n// import Dialogs from \"../../Dialogs/Dialogs\";\r\n\r\n// const MyPostsContainer = () => {\r\n// \t// debugger;\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{\r\n// \t\t\t\t(store) => {\r\n// \t\t\t\t\tlet state = store.getState();\r\n//\r\n// \t\t\t\t\tconst addPost = () => {\r\n// \t\t\t\t\t\tstore.dispatch(addPostActionCreator());\r\n// \t\t\t\t\t};\r\n//\r\n// \t\t\t\t\tlet onPostChange = (text) => {\r\n// \t\t\t\t\t\tlet action = updateNewPostTextActionCreator(text);\r\n// \t\t\t\t\t\tstore.dispatch(action);\r\n// \t\t\t\t\t};\r\n//\r\n// \t\t\t\t\treturn (\r\n// \t\t\t\t\t\t<MyPosts updateNewPostText={onPostChange}\r\n// \t\t\t\t\t\t\t\t\t\t addPost={addPost}\r\n// \t\t\t\t\t\t\t\t\t\t posts={state.profilePage.posts}\r\n// \t\t\t\t\t\t\t\t\t\t newPostText={state.profilePage.newPostText}/>\r\n// \t\t\t\t\t)\r\n// \t\t\t\t}\r\n// \t\t\t}\r\n// \t\t</StoreContext.Consumer>\r\n// \t);\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t}\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\t// updateNewPostText: (text) => {\r\n\t\t// \tlet action = updateNewPostTextActionCreator(text);\r\n\t\t// \tdispatch(action);\r\n\t\t// },\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t},\r\n\t}\r\n};\r\n\r\n//connect - делает то что мы делали в (выше закоментировано) const MyPostsContainer = () => {\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n\t\t\t\t\t{/*<ProfileInfo/>*/}\r\n\t\t\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t\t\t{/*<MyPostsContainer store={props.store} />*/}\r\n\t\t\t\t\t<MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\t// constructor(props){\r\n\t// \tsuper(props);\r\n\t// }\r\n\r\n\t// вызывается сразу после монтирования (то есть, вставки компонента в DOM). В этом методе должны происходить действия, которые требуют наличия DOM-узлов. Это хорошее место для создания сетевых запросов.\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\t// userId = 1049;\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {//Если нет авторизации на страницу логина\r\n\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t// axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n\t\t// \t.then(response => {\r\n\t\t// \t\tthis.props.setUserProfile(response.data);\r\n\t\t// \t});\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\t// if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\n//Берём из state нужные переменные объекты и добовлям их в props\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth,\r\n});\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);//HOC обёртка чтоб проверить зарегестрирован пользователь или нет\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);//Закидываем данные из URL\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\r\n\r\n//Сокращаем запись вместо того что в верху написали это(это конвеер по оборачинию компонены в другии функции)\r\n//это типа компонент пропускаешь через другие функции ,а в этих функциях что то происход с компонентом ,добовляется функционал, объекты\r\n//Компонент ProfileContainer - оборачиваем сначало в withAuthRedirect, потом в withRouter, потом в connect(mapStateToProps, {getUserProfile})\r\nexport default compose(\r\n\t// withAuthRedirect,\r\n\twithRouter,\r\n connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n)(ProfileContainer);"],"sourceRoot":""}