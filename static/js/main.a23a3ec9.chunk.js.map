{"version":3,"sources":["componets/Navbar/Navbar.module.css","assets/images/preloader.svg","hoc/withAuthRedirect.js","api/api.js","logo.svg","redux/auth-reducer.js","utils/object-helpers.js","redux/users-reducer.js","serviceWorker.js","componets/Navbar/Navbar.jsx","redux/sidebar-reducer.js","redux/store.js","componets/common/Paginator/Paginator.jsx","componets/Users/User.jsx","componets/Users/Users.jsx","redux/users-selectors.js","componets/Users/UsersContainer.jsx","componets/Header/Header.jsx","componets/Header/HeaderContainer.jsx","componets/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","componets/common/FormsControls/FormsControls.js","componets/common/Preloader/Preloader.js","componets/common/FormsControls/FormsControls.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","componets/common/Paginator/Paginator.module.css","utils/validators/validators.js","componets/Users/users.module.css","assets/images/user.png","componets/Header/Header.module.css"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","SET_USER_DATA","initialState","setAuthUserData","type","payload","getAuthUserData","dispatch","a","resultCode","id","message","messages","length","stopSubmit","_error","authReducer","action","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","usersReducer","followed","filter","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","activeClassName","activeLink","active","sidebarReducer","store","_state","profilePage","posts","likesCount","dialogsPage","dialogs","name","newMessageBody","sidebar","_callSubscribe","getState","subscribe","observer","profileReducer","dialogsReducer","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","log","Preloader","compose","Header","header","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","formData","initialized","appReducer","reducers","combineReducers","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","backgroundColor","preloader","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId","sendMessageCreator","body","value","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.a23a3ec9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2rX-3\",\"item\":\"Navbar_item__3ZU2C\",\"activeLink\":\"Navbar_activeLink__1PXA-\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//Берём из state нужные переменные объекты и добовлям их в props\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\n//HOC обёртка чтоб проверить зарегестрирован пользователь или нет\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n\t\t\treturn <Component {...this.props}/>\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n\r\n}","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,//Чтоб можно было с другово хоста заходить\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders:     {\r\n\t\t\"API-KEY\": \"db96c89d-bfd8-4d28-95ec-e7f7cea1c6f2\"\r\n\t}\r\n});\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t\t// return instance.post(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t\t// return instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\r\n\t},\r\n\tgetProfile(userId) {\r\n\t\tconsole.warn('Obsolete method. Please profileAPI object.');\r\n\t\treturn profileAPI.getProfile(userId);\r\n\t},\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId) {\r\n\t\treturn instance.get(`profile/` + userId);\r\n\t},\r\n\tgetStatus(userId) {\r\n\t\treturn instance.get(`profile/status/` + userId);\r\n\t},\r\n\tupdateStatus(status) {\r\n\t\treturn instance.put(`profile/status`, { status: status });\r\n\t}\r\n}\r\n\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get(`auth/me`)\r\n\t},\r\n\tlogin(email, password, rememberMe = false) {\r\n\t\treturn instance.post(`auth/login`, { email, password, rememberMe });\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`auth/login`);\r\n\t}\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {setTotalUsersCount, setUsers, toggleIsFetching} from \"./users-reducer\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// const SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n\ttype: SET_USER_DATA,\r\n\tpayload: {userId, email, login, isAuth}\r\n})\r\n\r\n//(это thunk)функция которая диспачит(dispatch) обычные экшены(action),которые делают асинхроную работу\r\n// export const getAuthUserData = () => {\r\n// \treturn (dispatch) => {\r\n// \t\treturn authAPI.me().then(response => {\r\n// \t\t\tif (response.data.resultCode === 0) {\r\n// \t\t\t\tlet {id, login, email} = response.data.data;\r\n// \t\t\t\tdispatch(setAuthUserData(id, email, login, true));\r\n// \t\t\t}\r\n// \t\t});\r\n// \t}\r\n// }\r\n//(это thunk)функция которая диспачит(dispatch) обычные экшены(action),которые делают асинхроную работу\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n\tlet response = await authAPI.me();\r\n\tif (response.data.resultCode === 0) {\r\n\t\tlet {id, login, email} = response.data.data;\r\n\t\tdispatch(setAuthUserData(id, email, login, true));\r\n\t}\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\tlet response = await authAPI.login(email, password, rememberMe);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(getAuthUserData())\r\n\t} else {\r\n\t\tlet message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n\t\tdispatch(stopSubmit(\"login\", {_error: message}));\r\n\r\n\t}\r\n}\r\n\r\n// export const logout = () => (dispatch) => {\r\n// \tauthAPI.logout()\r\n// \t\t.then(response => {\r\n// \t\t\tif (response.data.resultCode === 0) {\r\n// \t\t\t\tdispatch(setAuthUserData(null, null, null, false));\r\n// \t\t\t}\r\n// \t\t});\r\n// }\r\nexport const logout = () => async (dispatch) => {\r\n\tlet response = await authAPI.logout();\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setAuthUserData(null, null, null, false));\r\n\t}\r\n}\r\n\r\nexport default authReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\treturn items.map(u => {\r\n\t\tif (u[objPropName] === itemId) {\r\n\t\t\treturn {...u, ...newObjProps}\r\n\t\t}\r\n\t\treturn u;\r\n\t})\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n\tusers: [],\r\n\tpageSize: 15,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: true,\r\n\tfollowingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n\t\t\t\t// users: state.users.map(u => {\r\n\t\t\t\t// \tif (u.id === action.userId) {\r\n\t\t\t\t// \t\treturn {...u, followed: true}\r\n\t\t\t\t// \t}\r\n\t\t\t\t// \treturn u;\r\n\t\t\t\t// })\r\n\t\t\t};\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n\t\t\t\t// users: state.users.map(u => {\r\n\t\t\t\t// \tif (u.id === action.userId) {\r\n\t\t\t\t// \t\treturn {...u, followed: false}\r\n\t\t\t\t// \t}\r\n\t\t\t\t// \treturn u;\r\n\t\t\t\t// })\r\n\t\t\t};\r\n\t\tcase SET_USERS: {\r\n\t\t\treturn {...state, users: action.users}\r\n\t\t}\r\n\t\tcase SET_CURRENT_PAGE: {\r\n\t\t\treturn {...state, currentPage: action.currentPage}\r\n\t\t}\r\n\t\tcase SET_TOTAL_USERS_COUNT: {\r\n\t\t\treturn {...state, totalUsersCount: action.count}\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FETCHING: {\r\n\t\t\treturn {...state, isFetching: action.isFetching}\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching\r\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\r\n\t\t\t\t\t: state.followingInProgress.filter(id => id != action.userId)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n// export const follow = (userId) => ({type: FOLLOW, userId })\r\n// export const unfollow = (userId) => ({type: UNFOLLOW, userId })\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n\ttype: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n\tisFetching,\r\n\tuserId\r\n})\r\n\r\n//(это thunk)функция которая диспачит(dispatch) обычные экшены(action),которые делают асинхроную работу\r\nexport const requestUsers = (page, pageSize) => {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(toggleIsFetching(true));//Это для крутилки(включаем)\r\n\t\tdispatch(setCurrentPage(page));//Не знаю для чего у и без этого работало\r\n\r\n\t\tlet data = await usersAPI.getUsers(page, pageSize);\r\n\t\tdispatch(toggleIsFetching(false));//Это для крутилки(выключаем)\r\n\t\tdispatch(setUsers(data.items));\r\n\t\tdispatch(setTotalUsersCount(data.totalCount));\r\n\t}\r\n}\r\n//-------------------------------------------------------------------------------------------------\r\n// export const follow = (userId) => {\r\n// \treturn async (dispatch) => {\r\n// \t\tdispatch(toggleFollowingProgress(true, userId));\r\n//\r\n// \t\tlet response = await usersAPI.follow(userId);\r\n// \t\tif (response.data.resultCode == 0) {\r\n// \t\t\tdispatch(followSuccess(userId));\r\n// \t\t}\r\n// \t\tdispatch(toggleFollowingProgress(false, userId));\r\n// \t}\r\n// }\r\n// export const unfollow = (userId) => {\r\n// \treturn async (dispatch) => {\r\n// \t\tdispatch(toggleFollowingProgress(true, userId));\r\n//\r\n// \t\tlet response = await usersAPI.unfollow(userId);\r\n// \t\tif (response.data.resultCode == 0) {\r\n// \t\t\tdispatch(unfollowSuccess(userId));\r\n// \t\t}\r\n// \t\tdispatch(toggleFollowingProgress(false, userId));\r\n// \t}\r\n// }\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\tdispatch(toggleFollowingProgress(true, userId));\r\n\tlet response = await apiMethod(userId);\r\n\r\n\tif (response.data.resultCode == 0) {\r\n\t\tdispatch(actionCreator(userId));\r\n\t}\r\n\tdispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\treturn async (dispatch) => {\r\n\t\tfollowUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n\t}\r\n}\r\nexport const unfollow = (userId) => {\r\n\treturn async (dispatch) => {\r\n\t\tfollowUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n\t}\r\n}\r\n//----------------------------------------------------------------------\r\n\r\n\r\nexport default usersReducer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className = {s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}> Profile</NavLink>{/*//NavLink - нужен чтоб не было перезагрузки страницы*/}\r\n      </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Message</NavLink>\r\n      </div>\r\n\t\t\t<div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\treturn state;\r\n}\r\n\r\nexport default sidebarReducer;","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nlet store = {\r\n\t_state: {\r\n\t\tprofilePage: {\r\n\t\t\tposts: [\r\n\t\t\t\t{id: 1, message: 'Hi, how are you?', likesCount: 12,},\r\n\t\t\t\t{id: 2, message: \"It's my first post\", likesCount: 10,},\r\n\t\t\t\t{id: 3, message: 'Ура!!!', likesCount: 2,},\r\n\t\t\t],\r\n\r\n\t\t},\r\n\t\tdialogsPage: {\r\n\t\t\tmessages: [\r\n\t\t\t\t{id: 1, message: 'Hi'},\r\n\t\t\t\t{id: 2, message: 'Au'},\r\n\t\t\t\t{id: 3, message: 'Yo'},\r\n\t\t\t],\r\n\t\t\tdialogs: [\r\n\t\t\t\t{id: 1, name: 'Dimuy'},\r\n\t\t\t\t{id: 2, name: 'Andrey'},\r\n\t\t\t\t{id: 3, name: 'Valer'},\r\n\t\t\t],\r\n\t\t\tnewMessageBody: '',\r\n\t\t},\r\n\t\tsidebar:{},\r\n\t},\r\n\t_callSubscribe() {\r\n\t},\r\n\r\n\tgetState(){return this._state},\r\n\tsubscribe(observer) {\r\n\t\tthis._callSubscribe = observer;\r\n\r\n\t},\r\n\r\n\tdispatch(action){\r\n\t\tthis._state.profilePage = profileReducer(this._state.profilePage, action);\r\n\t\tthis._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n\t\tthis._state.sidebar = sidebarReducer(this._state.sidebar, action);\r\n\r\n\t\tthis._callSubscribe(this._state);\r\n\t},\r\n}\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;\r\n","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\tlet pagesCount = Math.ceil(totalItemsCount / pageSize);//Считаем сколько страниц будет\r\n\r\n\tlet pages = [];//массив для страниц\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i);\r\n\t}\r\n\r\n\tlet portionCount = Math.ceil(pagesCount / portionSize);//Количество порций страниц\r\n\tlet [portionNumber, setPortionNumber] = useState(1);//текущий номер порции, useState-использовать локальный State\r\n\tlet leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;//Левая граница порции\r\n\tlet rightPortionPageNumber = portionNumber * portionSize;//Правая граница порции\r\n\r\n\t// return <div>\r\n\t// \t{pages.map(p => {\r\n\t// \t\treturn <span className={currentPage === p && styles.selectedPage}\r\n\t// \t\t\t\t\t\t\t\t onClick={(e) => {\r\n\t// \t\t\t\t\t\t\t\t\t onPageChanged(p);\r\n\t// \t\t\t\t\t\t\t\t }}>{p}</span>\r\n\t// \t})}\r\n\t// </div>\r\n\treturn <div className={styles.paginator}>\r\n\t\t{portionNumber > 1 &&\r\n\t\t<button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n\t\t{pages\r\n\t\t\t.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t.map((p) => {\r\n\t\t\t\treturn <span className={cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n\t\t\t\t\t\t\t\t\t\t key={p}\r\n\t\t\t\t\t\t\t\t\t\t onClick={(e) => {onPageChanged(p);}}\r\n\t\t\t\t\t\t\t\t>{p}</span>\r\n\t\t\t})}\r\n\r\n\t\t{portionCount > portionNumber &&\r\n\t\t<button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n\t</div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/*<div key={u.id}>*/}\r\n\t\t\t<span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? <button disabled={followingInProgress\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.some(id => id === user.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfollow(user.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnfollow</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: <button disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfollow(user.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFollow</button>}\r\n\r\n                    </div>\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n\t\t\t</span>\r\n\t\t</div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n// let Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\nconst Users = (props) => {\r\n\t// let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\t//\r\n\t// let pages = [];//Считаем сколько страниц будет\r\n\t// for (let i = 1; i <= pagesCount; i++) {\r\n\t// \tpages.push(i);\r\n\t// }\r\n\r\n\treturn <div>\r\n\t\t{/*//Считаем сколько страниц будет*/}\r\n\t\t<Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n\t\t\t\t\t\t\t totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}/>\r\n\t\t<div>\r\n\t\t\t{props.users.map(u => <User user={u}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t followingInProgress={props.followingInProgress}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t key={u.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t unfollow={props.unfollow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t follow={props.follow}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t\t{/*<div>*/}\r\n\t\t\t{/*{pages.map(p => {*/}\r\n\t\t\t\t{/*return <span className={props.currentPage === p && styles.selectedPage}*/}\r\n\t\t\t\t\t{/*onClick={(e) => {*/}\r\n\t\t\t\t\t{/*props.onPageChanged(p);*/}\r\n\t\t\t\t\t{/*}}>{p}</span>*/}\r\n\t\t\t{/*})}*/}\r\n\t\t{/*</div>*/}\r\n\t\t\t{/*props.users.map(u =>*/}\r\n\t\t\t\t{/*<div key={u.id}>*/}\r\n                {/*<span>*/}\r\n                    {/*<div>*/}\r\n\t\t\t\t\t\t\t\t\t\t\t{/*<NavLink to={'/profile/' + u.id}>*/}\r\n                        {/*<img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}/>*/}\r\n                    \t{/*</NavLink>*/}\r\n\t\t\t\t\t\t\t\t\t\t{/*</div>*/}\r\n                    {/*<div>*/}\r\n                        {/*{u.followed*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/*?\t<button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*props.unfollow(u.id);*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/*}}>Unfollow</button>*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/*: <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*props.follow(u.id);*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/*}}>Follow</button>}*/}\r\n                    {/*</div>*/}\r\n                {/*</span>*/}\r\n\t\t\t\t\t{/*<span>*/}\r\n                    {/*<span>*/}\r\n                        {/*<div>{u.name}</div>*/}\r\n                        {/*<div>{u.status}</div>*/}\r\n                    {/*</span>*/}\r\n                    {/*<span>*/}\r\n                        {/*<div>{\"u.location.country\"}</div>*/}\r\n                        {/*<div>{\"u.location.city\"}</div>*/}\r\n                    {/*</span>*/}\r\n                {/*</span>*/}\r\n\t\t\t\t{/*</div>)*/}\r\n\t\t{/*}*/}\r\n\t</div>\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n//--------reselect---------------------------------------------\r\n//Это сделано для показа работы reselect (filter(u => true); - тут не надо)\r\n// export const getUsers = (state) => {\r\n// \treturn state.usersPage.users;\r\n// }\r\n\r\nconst getUsersSelector = (state) => {\r\n\treturn state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n\t(users) => {\r\n\t\treturn users.filter(u => true);\r\n\t})\r\n//-------------------------------------------------------------\r\n\r\nexport const getPageSize = (state) => {\r\n\treturn state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n\treturn state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n\treturn state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n\treturn state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n\treturn state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n\tfollow,\r\n\tsetCurrentPage,\r\n\tunfollow, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from 'axios';//Импортируем всё что там находится в один объект axios\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n\tgetCurrentPage,\r\n\tgetFollowingInProgress,\r\n\tgetIsFetching,\r\n\tgetPageSize,\r\n\tgetTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n//Этот компонент нужен чтоб в нём выполнять AJAX запросы\r\nclass UsersContainer extends React.Component {\r\n\t// constructor(props){\r\n\t// \tsuper(props);\r\n\t// }\r\n\r\n\tcomponentDidMount() {\r\n\t\t// this.props.toggleIsFetching(true);//Это для крутилки(включаем)\r\n\t\t//\r\n\t\t// usersAPI.requestUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n\t\t// \t\tthis.props.toggleIsFetching(false);//Это для крутилки(выключаем)\r\n\t\t// \t\tthis.props.setUsers(data.items);\r\n\t\t// \t\tthis.props.setTotalUsersCount(data.totalCount);\r\n\t\t// \t});\r\n\t\tconst {currentPage, pageSize} = this.props;\r\n\t\tthis.props.getUsers(currentPage, pageSize);\r\n\t}\r\n\r\n\tonPageChanged = (pageNumber) => {\r\n\t\t// this.props.setCurrentPage(pageNumber);\r\n\t\t// this.props.toggleIsFetching(true);//Это для крутилки\r\n\t\t//\r\n\t\t// usersAPI.requestUsers(pageNumber, this.props.pageSize).then(data => {\r\n\t\t// \t\tthis.props.toggleIsFetching(false);//Это для крутилки\r\n\t\t// \t\tthis.props.setUsers(data.items);\r\n\t\t// \t});\r\n\t\tconst {pageSize} = this.props;\r\n\t\tthis.props.setCurrentPage(pageNumber);//Чтоб выделялся жирным номер строки\r\n\t\tthis.props.getUsers(pageNumber, pageSize);//Получить пользователей для этой страницы\r\n\t}\r\n\r\n\trender() {//Возвращает JSX разметку\r\n\t\tconsole.log('render Users');\r\n\t\treturn <>\r\n\t\t\t{this.props.isFetching ? <Preloader/> : null}{/*//Это крутилка*/}\r\n\t\t\t<Users totalUsersCount={this.props.totalUsersCount}\r\n\t\t\t\t\t\t pageSize={this.props.pageSize}\r\n\t\t\t\t\t\t currentPage={this.props.currentPage}\r\n\t\t\t\t\t\t onPageChanged={this.onPageChanged}\r\n\t\t\t\t\t\t users={this.props.users}\r\n\t\t\t\t\t\t follow={this.props.follow}\r\n\t\t\t\t\t\t unfollow={this.props.unfollow}\r\n\t\t\t\t\t\t // toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n\t\t\t\t\t\t followingInProgress={this.props.followingInProgress}\r\n\t\t\t/>\r\n\t\t</>\r\n\t}\r\n}\r\n\r\n//--------------------------------------------------------------------------\r\n// let mapStateToProps = (state) => {\r\n// \treturn {\r\n// \t\tusers: state.usersPage.users,\r\n// \t\tpageSize: state.usersPage.pageSize,\r\n// \t\ttotalUsersCount: state.usersPage.totalUsersCount,\r\n// \t\tcurrentPage: state.usersPage.currentPage,\r\n// \t\tisFetching: state.usersPage.isFetching,\r\n// \t\tfollowingInProgress: state.usersPage.followingInProgress,\r\n// \t}\r\n// };\r\nlet mapStateToProps = (state) => {\r\n\tconsole.log('mapStateToProps Users');\r\n\treturn {\r\n\t\tusers: getUsers(state),\r\n\t\tpageSize: getPageSize(state),\r\n\t\ttotalUsersCount: getTotalUsersCount(state),\r\n\t\tcurrentPage: getCurrentPage(state),\r\n\t\tisFetching: getIsFetching(state),\r\n\t\tfollowingInProgress: getFollowingInProgress(state)\r\n\t}\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n// \treturn {\r\n// \t\tfollow: (userId) => {\r\n// \t\t\tdispatch(followAC(userId));\r\n// \t\t},\r\n// \t\tunfollow: (userId) => {\r\n// \t\t\tdispatch(unfollowAC(userId));\r\n// \t\t},\r\n// \t\tsetUsers: (users) => {\r\n// \t\t\tdispatch(setUsersAC(users));\r\n// \t\t},\r\n// \t\tsetCurrentPage: (pageNumber) => {\r\n// \t\t\tdispatch(setCurrentPageAC(pageNumber))\r\n// \t\t},\r\n// \t\tsetTotalUsersCount: (totalCount) => {\r\n// \t\t\tdispatch(setUsersTotalCountAC(totalCount))\r\n// \t\t},\r\n// \t\ttoggleIsFetching: (isFetching) => {\r\n// \t\t\tdispatch(toggleIsFetchingAC(isFetching))\r\n// \t\t},\r\n// \t}\r\n// };\r\n//\r\n// //Этот компонент нужен чтоб прокинуть state(данные, состояние) и функции (dispatch) для работы со state\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(UsersContainer);//HOC обёртка чтоб проверить зарегестрирован пользователь или нет\r\n//Этот компонент нужен чтоб прокинуть state(данные, состояние) и функции (dispatch) для работы со state\r\n// export default connect(mapStateToProps,\r\n// \t// {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress})(UsersContainer);\r\n// \t{follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers })(AuthRedirectComponent);\r\n\r\n//Сокращаем запись вместо того что в верху написали это(это конвеер по оборачинию компонены в другии функции)\r\n//это типа компонент пропускаешь через другие функции ,а в этих функциях что то происход с компонентом ,добовляется функционал, объекты\r\n//Компонент UsersContainer - оборачиваем сначало в withAuthRedirect, потом в connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers })\r\nexport default compose(\r\n\t// withAuthRedirect,\r\n\tconnect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header className={s.header}>\r\n\t\t\t<img src='https://html.crumina.net/html-olympus/img/logo.png'></img>\r\n\r\n\t\t\t<div className={s.loginBlock}>\r\n\t\t\t\t{props.isAuth\r\n\t\t\t\t\t? <div>\r\n\t\t\t\t\t\t\t{props.login} - <button onClick={props.logout}>Log out</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t: <NavLink to={'/login'}>Login</NavLink>}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport * as axios from 'axios';//Импортируем всё что там находится в один объект axios\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\t// axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n\t\t// \twithCredentials: true\r\n\t\t// })\r\n\t\t// \t.then(response => {\r\n\t\t// \t\tif (response.data.resultCode === 0) {\r\n\t\t// \t\t\tlet {id, login, email} = response.data.data;\r\n\t\t// \t\t\tthis.props.setAuthUserData(id, email, login);\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\r\n\t\t// this.props.getAuthUserData();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <Header {...this.props} />\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tlogin: state.auth.login,\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\n// const LoginForm = (props) => {\r\nconst LoginForm = ({handleSubmit, error}) => {//Используем дестроктуризацию, это пишем вместо const LoginForm = (props) => {\r\n\r\n\t//handleSubmit - это callBack функция из redux-form\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t{/*<div>*/}\r\n\t\t\t\t{/*<Field placeholder={\"Email\"} name={\"email\"}*/}\r\n\t\t\t\t\t\t\t {/*validate={[required]}*/}\r\n\t\t\t\t\t\t\t {/*component={Input}/>*/}\r\n\t\t\t{/*</div>*/}\r\n\t\t\t{/*<div>*/}\r\n\t\t\t\t{/*<Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}*/}\r\n\t\t\t\t\t\t\t {/*validate={[required]}*/}\r\n\t\t\t\t\t\t\t {/*component={Input}/>*/}\r\n\t\t\t{/*</div>*/}\r\n\t\t\t{/*<div>*/}\r\n\t\t\t\t{/*<Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me*/}\r\n\t\t\t{/*</div>*/}\r\n\t\t\t{createField(\"Email\", \"email\", [required], Input)}\r\n\t\t\t{createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n\t\t\t{createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n\t\t\t{error && <div className={style.formSummaryError}>{error}</div>}\r\n\t\t\t<div>\r\n\t\t\t\t<button>Login</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\n//Сначало вызовется handleSubmit ,она соберёт даннные проверит валидацию и т.д. ,а потом вызовет нащу функцию onSubmit и передаст в неё formData\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\t// return <h1>LOGIN</h1>\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.login(formData.email, formData.password, formData.rememberMe);\r\n\t};\r\n\r\n\tif (props.isAuth) {\r\n\t\treturn <Redirect to={\"/profile\"} />\r\n\t}\r\n\r\n\treturn <div>\r\n\t\t<h1>Login</h1>\r\n\t\t<LoginReduxForm onSubmit={onSubmit} />\r\n\t</div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n\tinitialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n\tlet promise = dispatch(getAuthUserData());\r\n\t//dispatch(somethingelse());\r\n\t//dispatch(somethingelse());\r\n\tPromise.all([promise])\r\n\t\t.then(() => {\r\n\t\t\tdispatch(initializedSuccess());\r\n\t\t});\r\n}\r\n\r\n\r\nexport default appReducer;","// import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';//пакет для работы с формами\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tsidebar: sidebarReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,//пакет для работы с формами\r\n\tapp: appReducer,\r\n})\r\n\r\n//------Было так--------------------------------------------------------------------------\r\n//applyMiddleware(thunkMiddleware) - внедрям промежуточный слов в store\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));//applyMiddleware - чтоб можно было работать с redux-thunk\r\n//\r\n// window.store = store;\r\n//--------------------------------------------------------------------------------------------------------------\r\n//------Это сделали чтоб работало расширение Redux DevTools в Хроме(браузере)----------------------------------------\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;//Это можно и не писать\r\n//------------------------------------------------------------------------------------\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../componets/common/Preloader/Preloader\";\r\n\r\n//сделали для ленивой загрузки React.lazy\r\n//fallback - для того чтоб пока зрузится покозать что то ,например Preloader\r\nexport const withSuspense = (Component) => {\r\n\treturn (props) => {\r\n\t\treturn <React.Suspense fallback={<Preloader />} >\r\n\t\t\t<Component {...props} />\r\n\t\t</React.Suspense>\r\n\t};\r\n}","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from './componets/Navbar/Navbar';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport state, {addPost} from \"./redux/store\";\r\nimport UsersContainer from \"./componets/Users/UsersContainer\";\r\nimport HeaderContainer from \"./componets/Header/HeaderContainer\";\r\nimport LoginPage from \"./componets/Login/Login\";\r\nimport Preloader from \"./componets/common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";//для ленивой загрузки React.lazy\r\n\r\n// import DialogsContainer from \"./componets/Dialogs/DialogsContainer\";\r\n// import ProfileContainer from \"./componets/Profile/ProfileContainer\";\r\nconst DialogsContainer = React.lazy(() => import('./componets/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./componets/Profile/ProfileContainer'));\r\n\r\n\r\n\r\n// const App = (props) => {\r\nclass App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.initializeApp();\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.initialized) {\r\n\t\t\treturn <Preloader/>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className='app-wrapper'>\r\n\t\t\t\t<HeaderContainer/>\r\n\t\t\t\t<Navbar/>\r\n\t\t\t\t<div className='app-wrapper-content'>\r\n\t\t\t\t\t{/*//exact path='/dialogs' - чтоб переходил только по dialogs - и ни куда дальше*/}\r\n\t\t\t\t\t{/*//Route - перехватывает пути - url(path='/profile') и загружает нужный компонент(Dialogs)*/}\r\n\t\t\t\t\t{/*<Route path='/dialogs' component={Dialogs}/>*/}\r\n\t\t\t\t\t{/*<Route path='/profile' component={Profile}/>*/}\r\n\r\n\t\t\t\t\t{/*<Route path='/dialogs' render={()=><DialogsContainer store={props.store}/>}/>*/}\r\n\t\t\t\t\t{/*<Route path='/profile' render={()=><Profile store={props.store}/> }/>*/}\r\n\r\n\t\t\t\t\t{/*<Route path='/dialogs' render={() => <DialogsContainer/>}/>*/}\r\n\t\t\t\t\t<Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n\r\n\t\t\t\t\t{/*<Route path='/profile' render={()=><Profile /> }/>*/}\r\n\t\t\t\t\t<Route path='/profile/:userId?'\r\n\t\t\t\t\t\t\t\t render={withSuspense(ProfileContainer)} />{/*? знак даёт понять что :userId парамеир не обязательный*/}\r\n\r\n\t\t\t\t\t\t\t\t <Route path='/users' render={() => <UsersContainer/>}/>\r\n\t\t\t\t\t<Route path='/login' render={() => <LoginPage/>}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tinitialized: state.app.initialized\r\n})\r\n\r\n//------Было так--------------------------------------------------------------------------\r\n// export default compose(//compose - метод чтоб сделать обёртки проще)\r\n// \twithRouter,////Закидываем данные из URL(здесь оборочиваем ,потому что Route здесь начинает не коректно работать ,типа баг)\r\n// \tconnect(mapStateToProps, {initializeApp}))(App);\r\n//---------------------------------------------------------------\r\n//-----Стало так ,чтоб тесты отрабатывали--------------------------------------------------\r\nlet AppContainer = compose(//compose - метод чтоб сделать обёртки проще)\r\n\twithRouter,////Закидываем данные из URL(здесь оборочиваем ,потому что Route здесь начинает не коректно работать ,типа баг)\r\n\tconnect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<AppContainer/>\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t)\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n//---------------------------------------------------------------","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n\r\n// let renderEntireTree = (state)=> {\r\n// \tReactDOM.render(\r\n// \t\t<React.StrictMode>\r\n// \t\t\t{/*<App posts={posts} dialogs={dialogs} messages={messages}/>*/}\r\n// \t\t\t<App state={state} addPost={store.addPost.bind(store)}/>\r\n// \t\t</React.StrictMode>,\r\n// \t\tdocument.getElementById('root')\r\n// \t);\r\n// };\r\n//---------------------------------------------------------------------------\r\n// let renderEntireTree = ()=> {\r\n// \t//debugger;\r\n// \tReactDOM.render(\r\n// \t\t<React.StrictMode>\r\n// \t\t\t<Provider store={store}>\r\n// \t\t\t\t{/*<App state={state} dispatch={store.dispatch.bind(store)} store={store}/>*/}\r\n// \t\t\t\t<App />\r\n// \t\t\t</Provider>\r\n// \t\t</React.StrictMode>,\r\n// \t\tdocument.getElementById('root')\r\n// \t);\r\n// };\r\n//\r\n// renderEntireTree();\r\n\r\n//connect из react-redux  - сам перерисовывает ,по этому store.subscribe(renderEntireTree()) нам не нужен теперь\r\n// store.subscribe(()=>{\r\n// \t// let state = store.getState();\r\n// \trenderEntireTree();\r\n// });\r\n\r\n//-----------------------------------------------------------------------------------------\r\n// ReactDOM.render(\r\n// \t<React.StrictMode>\r\n// \t\t<Provider store={store}>\r\n// \t\t\t{/*<App state={state} dispatch={store.dispatch.bind(store)} store={store}/>*/}\r\n// \t\t\t<App />\r\n// \t\t</Provider>\r\n// \t</React.StrictMode>,\r\n// \tdocument.getElementById('root')\r\n// );\r\n\r\n//------Было так--------------------------------------------------------------------------\r\n// ReactDOM.render(\r\n// \t<BrowserRouter>\r\n// \t\t<Provider store={store}>\r\n// \t\t\t{/*<App state={state} dispatch={store.dispatch.bind(store)} store={store}/>*/}\r\n// \t\t\t<App/>\r\n// \t\t</Provider>\r\n// \t</BrowserRouter>\r\n// \t, document.getElementById('root')\r\n// );\r\n//---------------------------------------------------------------\r\n//-----Стало так ,чтоб тесты отрабатывали--------------------------------------------------\r\nReactDOM.render(<SamuraiJSApp/>\r\n\t, document.getElementById('root')\r\n);\r\n//---------------------------------------------------------------------------\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\n// const FormControl = ({input, meta, child, ...props}) => {\r\n// \tconst hasError = meta.touched && meta.error;//Если объекте что то вводили и есть ошибка\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n\tconst hasError = touched && error;//Если объекте что то вводили и есть ошибка\r\n\treturn (\r\n\t\t<div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n\t\t\t<div>\r\n\t\t\t\t{/*{props.children}*/}\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\tconst {input, meta, child, ...restProps} = props;\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<textarea {...input} {...restProps} />{/*//Чтоб сюда попала textarea в FormControl мы пишем {props.children}*/}\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n\r\nexport const Input = (props) => {\r\n\tconst {input, meta, child, ...restProps} = props;\r\n\treturn <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n\t<div>\r\n\t\t<Field placeholder={placeholder} name={name}\r\n\t\t\t\t\t validate={validators}\r\n\t\t\t\t\t component={component}\r\n\t\t\t\t\t {...props}\r\n\t\t/> {text}\r\n\t</div>\r\n)\r\n","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n\treturn <div  style={ { backgroundColor: 'white' } }>\r\n\t\t<img src={preloader} />\r\n\t</div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2TzFq\",\"error\":\"FormsControls_error__XOo_l\",\"formSummaryError\":\"FormsControls_formSummaryError__25bfA\"};","import {setAuthUserData} from \"./auth-reducer\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{id: 1, message: 'Hi, how are you?', likesCount: 12,},\r\n\t\t{id: 2, message: \"It's my first post\", likesCount: 10,},\r\n\t\t{id: 3, message: 'Ура!!!', likesCount: 2,},\r\n\t],\r\n\tprofile: null,\r\n\tstatus: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 5,\r\n\t\t\t\tmessage: action.newPostText,\r\n\t\t\t\tlikesCount: 0\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t};\r\n\t\t}\r\n\t\t// case UPDATE_NEW_POST_TEXT: {\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tnewPostText: action.newText,\r\n\t\t// \t};\r\n\t\t// }\r\n\t\tcase SET_USER_PROFILE: {\r\n\t\t\treturn {...state, profile: action.profile}\r\n\t\t}\r\n\t\tcase SET_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase DELETE_POST:\r\n\t\t\treturn {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n// export const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\n//(это thunk)функция которая диспачит(dispatch) обычные экшены(action),которые делают асинхроную работу\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n\tlet response = await usersAPI.getProfile(userId);\r\n\tdispatch(setUserProfile(response.data));\r\n}\r\n\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n\tconst response = await profileAPI.getStatus(userId);\r\n\tdispatch(setStatus(response.data));\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n\tconst response = await profileAPI.updateStatus(status);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setStatus(status));\r\n\t}\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n\tmessages: [\r\n\t\t{id: 1, message: 'Hi'},\r\n\t\t{id: 2, message: 'Au'},\r\n\t\t{id: 3, message: 'Yo'},\r\n\t],\r\n\tdialogs: [\r\n\t\t{id: 1, name: 'Dimuy'},\r\n\t\t{id: 2, name: 'Andrey'},\r\n\t\t{id: 3, name: 'Valer'},\r\n\t],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\t// let stateCopy = {\r\n\t// \t...state,\r\n\t// \tmessages: [...state.messages],\r\n\t// };\r\n\r\n\tswitch (action.type) {\r\n\t\t// case UPDATE_NEW_MESSAGE_BODY:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tnewMessageBody: action.body\r\n\t\t// \t};\r\n\t\tcase SEND_MESSAGE:\r\n\t\t\tlet body = action.newMessageBody;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages: [...state.messages, {id: 6, message: body}]\r\n\t\t\t};\r\n\t\t\t// let stateCopy = {...state};\r\n\t\t\t// let body = stateCopy.newMessageBody;\r\n\t\t\t// stateCopy.newMessageBody = '';\r\n\t\t\t// stateCopy.messages = [...state.messages];\r\n\t\t\t// stateCopy.messages.push({id: 6, message: body});\r\n\t\t\t// return stateCopy;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n// export const updateNewMessageBodyCreator = (body) =>\r\n// \t({type: UPDATE_NEW_MESSAGE_BODY, body: body});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__19DTm\",\"pageNumber\":\"Paginator_pageNumber__2P_B1\",\"selectedPage\":\"Paginator_selectedPage__XTZ72\"};","export const required = value => {\r\n\tif (value) return undefined;\r\n\r\n\treturn \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\treturn undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3x_yZ\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2HKBa\",\"loginBlock\":\"Header_loginBlock__30Fd-\"};"],"sourceRoot":""}