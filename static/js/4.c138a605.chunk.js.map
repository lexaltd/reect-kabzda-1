{"version":3,"sources":["componets/Dialogs/Dialogs.module.css","componets/Dialogs/DialogItem/DialogItem.jsx","componets/Dialogs/Message/Message.jsx","componets/Dialogs/AddMessageForm/AddMessageForm.jsx","componets/Dialogs/Dialogs.jsx","componets/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8FCWnKC,EARI,SAACC,GACnB,OACC,yBAAKC,UAAWC,IAAEC,OAAO,IAAID,IAAEE,QAC9B,kBAAC,IAAD,CAASC,GAAI,YAAYL,EAAMM,IAAKN,EAAMO,QCG9BC,EANC,SAACR,GAChB,OACC,yBAAKC,UAAWC,IAAEO,SAAUT,EAAMS,U,yCCD9BC,EAAcC,YAAiB,IAoBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAjBQ,SAACZ,GAEvB,OACC,0BAAMc,SAAUd,EAAMe,cACrB,6BAEC,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUV,GACrBW,YAAY,6HAAyBd,KAAK,oBAE/C,6BACC,6CC+CWe,EAzDC,SAACtB,GAChB,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAEtB,GAAIC,KAAMqB,EAAErB,KAAMD,GAAIsB,EAAEtB,QACpFwB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAE1B,GAAIG,QAASuB,EAAEvB,aACzDc,EAAMU,eAiB3B,OAAKjC,EAAMkC,OAGV,yBAAKjC,UAAWC,IAAEwB,SACjB,yBAAKzB,UAAWC,IAAEiC,cAChBV,GAEF,yBAAKxB,UAAWC,IAAE6B,UACjB,6BAAMD,IAGP,kBAAC,EAAD,CAAgBhB,SAfI,SAACsB,GACtBpC,EAAMqC,YAAYD,EAAOH,oBAGA,kBAAC,IAAD,CAAU5B,GAAI,Y,wBC0B1BiC,sBACdC,aAxBqB,SAAChB,GACtB,MAAO,CACNC,YAAaD,EAAMC,gBAII,SAACgB,GACzB,MAAO,CAINH,YAAa,SAACJ,GACbO,EAASC,YAAmBR,SAa9BS,IAFcJ,CAGbhB","file":"static/js/4.c138a605.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3HF_U\",\"dialogsItems\":\"Dialogs_dialogsItems__2x-Py\",\"active\":\"Dialogs_active__Iltyb\",\"messages\":\"Dialogs_messages__ga-F7\",\"message\":\"Dialogs_message__1wcqp\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\treturn (\r\n\t\t<div className={s.dialog+' '+s.active}>\r\n\t\t\t<NavLink to={\"/dialogs/\"+props.id}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={s.message}>{props.message}</div>\r\n\t);\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n\t//handleSubmit - это callBack функция из redux-form\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t{/*<Field component=\"textarea\" name=\"newMessageBody\" placeholder=\"Введите ваше сообщение\" />*/}\r\n\t\t\t\t<Field component={Textarea}\r\n\t\t\t\t\t\t\t validate={[required, maxLength50]}\r\n\t\t\t\t\t\t\t placeholder='Введите ваше сообщение' name=\"newMessageBody\" />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n// import {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n\tlet messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\tlet newMessageBody = state.newMessageBody;\r\n\r\n\r\n\t// let onSendMessageClick = () => {\r\n\t// \tprops.sendMessage();\r\n\t// }\r\n\t//\r\n\t// let onNewMessageChange = (e) => {\r\n\t// \tlet body = e.target.value;\r\n\t// \tprops.updateNewMessageBody(body);\r\n\t// }\r\n\r\n\r\n\tconst addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t};\r\n\r\n\tif (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t</div>\r\n\t\t\t{/*<AddMessageFormRedux onSubmit={addNewMessage} />*/}\r\n\t\t\t<AddMessageForm onSubmit={addNewMessage} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// const AddMessageForm = (props) => {\r\n// \t//handleSubmit - это callBack функция из redux-form\r\n// \treturn (\r\n// \t\t<form onSubmit={props.handleSubmit}>\r\n// \t\t\t<div>\r\n// \t\t\t\t{/*<Field component=\"textarea\" name=\"newMessageBody\" placeholder=\"Введите ваше сообщение\" />*/}\r\n// \t\t\t\t<Field component={Textarea}\r\n// \t\t\t\t\t\t\t validate={[required, maxLength50]}\r\n// \t\t\t\t\t\t\t placeholder='Введите ваше сообщение' name=\"newMessageBody\" />\r\n// \t\t\t</div>\r\n// \t\t\t<div>\r\n// \t\t\t\t<button>Send</button>\r\n// \t\t\t</div>\r\n// \t\t</form>\r\n// \t)\r\n// };\r\n//\r\n// const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n// const DialogsContainer = () => {\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{\r\n// \t\t\t\t(store) => {\r\n// \t\t\t\t\tlet state = store.getState().dialogsPage;\r\n//\r\n// \t\t\t\t\tlet onSendMessageClick = () => {\r\n// \t\t\t\t\t\tstore.dispatch(sendMessageCreator());\r\n// \t\t\t\t\t}\r\n//\r\n// \t\t\t\t\tlet onNewMessageChange = (body) => {\r\n// \t\t\t\t\t\tstore.dispatch(updateNewMessageBodyCreator(body));\r\n// \t\t\t\t\t}\r\n//\r\n// \t\t\t\t\treturn (\r\n// \t\t\t\t\t\t<Dialogs sendMessage={onSendMessageClick}\r\n// \t\t\t\t\t\t\t\t\t\t updateNewMessageBody={onNewMessageChange}\r\n// \t\t\t\t\t\t\t\t\t\t dialogsPage={state}/>\r\n// \t\t\t\t\t)\r\n// \t\t\t\t}\r\n// \t\t\t}\r\n// \t\t</StoreContext.Consumer>\r\n// \t);\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\t// updateNewMessageBody: (body) => {\r\n\t\t// \tdispatch(updateNewMessageBodyCreator(body));\r\n\t\t// },\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);//HOC обёртка чтоб проверить зарегестрирован пользователь или нет\r\n// //connect - делает то что мы делали в (выше закоментировано) const DialogsContainer = () => {\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\n\r\n//Сокращаем запись вместо того что в верху написали это\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}